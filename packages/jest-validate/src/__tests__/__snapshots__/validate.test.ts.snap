// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`Repeated types within multiple valid examples are coalesced in error report 1`] = `
"<red><bold><bold>●</intensity><bold> Validation Error</intensity>:</color>
<red></color>
<red>  Option <bold>"foo"</intensity> must be of type:</color>
<red>    <bold><green>string</color><red></intensity> or <bold><green>number</color><red></intensity></color>
<red>  but instead received:</color>
<red>    <bold><red>boolean</color><red></intensity></color>
<red></color>
<red>  Example:</color>
<red>  {</color>
<red>    <bold>"foo"</intensity>: <bold>"foo"</intensity></color>
<red>  }</color>
<red></color>
<red>  or</color>
<red></color>
<red>  {</color>
<red>    <bold>"foo"</intensity>: <bold>"bar"</intensity></color>
<red>  }</color>
<red></color>
<red>  or</color>
<red></color>
<red>  {</color>
<red>    <bold>"foo"</intensity>: <bold>2</intensity></color>
<red>  }</color>
<red></color>"
`;

exports[`displays warning for deprecated config options 1`] = `
"<yellow><bold><bold>●</intensity><bold> Deprecation Warning</intensity>:</color>
<yellow></color>
<yellow>  Option <bold>scriptPreprocessor</intensity> was replaced by <bold>transform</intensity>, which support multiple preprocessors.</color>
<yellow></color>
<yellow>  Jest now treats your current configuration as:</color>
<yellow>  {</color>
<yellow>    <bold>"transform"</intensity>: <bold>{".*": "test"}</intensity></color>
<yellow>  }</color>
<yellow></color>
<yellow>  Please update your configuration.</color>
<yellow></color>"
`;

exports[`displays warning for unknown config options 1`] = `
"<yellow><bold><bold>●</intensity><bold> Validation Warning</intensity>:</color>
<yellow></color>
<yellow>  Unknown option <bold>"unkwon"</intensity> with value <bold>{}</intensity> was found. Did you mean <bold>"unknown"</intensity>?</color>
<yellow>  This is probably a typing mistake. Fixing it will remove this message.</color>
<yellow></color>"
`;

exports[`pretty prints valid config for Array 1`] = `
"<red><bold><bold>●</intensity><bold> Validation Error</intensity>:</color>
<red></color>
<red>  Option <bold>"coverageReporters"</intensity> must be of type:</color>
<red>    <bold><green>array</color><red></intensity></color>
<red>  but instead received:</color>
<red>    <bold><red>object</color><red></intensity></color>
<red></color>
<red>  Example:</color>
<red>  {</color>
<red>    <bold>"coverageReporters"</intensity>: <bold>[</intensity></color>
<red><bold>      "json",</intensity></color>
<red><bold>      "text",</intensity></color>
<red><bold>      "lcov",</intensity></color>
<red><bold>      "clover"</intensity></color>
<red><bold>    ]</intensity></color>
<red>  }</color>
<red></color>"
`;

exports[`pretty prints valid config for Boolean 1`] = `
"<red><bold><bold>●</intensity><bold> Validation Error</intensity>:</color>
<red></color>
<red>  Option <bold>"automock"</intensity> must be of type:</color>
<red>    <bold><green>boolean</color><red></intensity></color>
<red>  but instead received:</color>
<red>    <bold><red>array</color><red></intensity></color>
<red></color>
<red>  Example:</color>
<red>  {</color>
<red>    <bold>"automock"</intensity>: <bold>false</intensity></color>
<red>  }</color>
<red></color>"
`;

exports[`pretty prints valid config for Function 1`] = `
"<red><bold><bold>●</intensity><bold> Validation Error</intensity>:</color>
<red></color>
<red>  Option <bold>"fn"</intensity> must be of type:</color>
<red>    <bold><green>function</color><red></intensity></color>
<red>  but instead received:</color>
<red>    <bold><red>string</color><red></intensity></color>
<red></color>
<red>  Example:</color>
<red>  {</color>
<red>    <bold>"fn"</intensity>: <bold>(_config, _option, _deprecatedOptions) => true</intensity></color>
<red>  }</color>
<red></color>"
`;

exports[`pretty prints valid config for Object 1`] = `
"<red><bold><bold>●</intensity><bold> Validation Error</intensity>:</color>
<red></color>
<red>  Option <bold>"haste"</intensity> must be of type:</color>
<red>    <bold><green>object</color><red></intensity></color>
<red>  but instead received:</color>
<red>    <bold><red>number</color><red></intensity></color>
<red></color>
<red>  Example:</color>
<red>  {</color>
<red>    <bold>"haste"</intensity>: <bold>{}</intensity></color>
<red>  }</color>
<red></color>"
`;

exports[`pretty prints valid config for String 1`] = `
"<red><bold><bold>●</intensity><bold> Validation Error</intensity>:</color>
<red></color>
<red>  Option <bold>"preset"</intensity> must be of type:</color>
<red>    <bold><green>string</color><red></intensity></color>
<red>  but instead received:</color>
<red>    <bold><red>number</color><red></intensity></color>
<red></color>
<red>  Example:</color>
<red>  {</color>
<red>    <bold>"preset"</intensity>: <bold>"react-native"</intensity></color>
<red>  }</color>
<red></color>"
`;

exports[`reports errors nicely when failing with multiple valid options 1`] = `
"<red><bold><bold>●</intensity><bold> Validation Error</intensity>:</color>
<red></color>
<red>  Option <bold>"foo"</intensity> must be of type:</color>
<red>    <bold><green>string</color><red></intensity> or <bold><green>array</color><red></intensity></color>
<red>  but instead received:</color>
<red>    <bold><red>number</color><red></intensity></color>
<red></color>
<red>  Example:</color>
<red>  {</color>
<red>    <bold>"foo"</intensity>: <bold>"text"</intensity></color>
<red>  }</color>
<red></color>
<red>  or</color>
<red></color>
<red>  {</color>
<red>    <bold>"foo"</intensity>: <bold>[</intensity></color>
<red><bold>      "text"</intensity></color>
<red><bold>    ]</intensity></color>
<red>  }</color>
<red></color>"
`;

exports[`works with custom deprecations 1`] = `
"<yellow><bold>My Custom Deprecation Warning</intensity>:</color>
<yellow></color>
<yellow>  Option <bold>scriptPreprocessor</intensity> was replaced by <bold>transform</intensity>, which support multiple preprocessors.</color>
<yellow></color>
<yellow>  Jest now treats your current configuration as:</color>
<yellow>  {</color>
<yellow>    <bold>"transform"</intensity>: <bold>{".*": "test"}</intensity></color>
<yellow>  }</color>
<yellow></color>
<yellow>  Please update your configuration.</color>
<yellow></color>
<yellow>My custom comment</color>"
`;

exports[`works with custom errors 1`] = `
"<red><bold>My Custom Error</intensity>:</color>
<red></color>
<red>  Option <bold>"test"</intensity> must be of type:</color>
<red>    <bold><green>array</color><red></intensity></color>
<red>  but instead received:</color>
<red>    <bold><red>string</color><red></intensity></color>
<red></color>
<red>  Example:</color>
<red>  {</color>
<red>    <bold>"test"</intensity>: <bold>[</intensity></color>
<red><bold>      1,</intensity></color>
<red><bold>      2</intensity></color>
<red><bold>    ]</intensity></color>
<red>  }</color>
<red></color>
<red>My custom comment</color>"
`;

exports[`works with custom warnings 1`] = `
"<yellow><bold>My Custom Warning</intensity>:</color>
<yellow></color>
<yellow>  Unknown option <bold>"unknown"</intensity> with value <bold>"string"</intensity> was found.</color>
<yellow>  This is probably a typing mistake. Fixing it will remove this message.</color>
<yellow></color>
<yellow>My custom comment</color>"
`;
